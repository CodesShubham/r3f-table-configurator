/**
 * @description Hook to handle table model size
 * @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)
 * @note        Auto-generated by: https://github.com/pmndrs/gltfjsx
 * @note        Command: `npx gltfjsx@6.5.3 -t public/model/table.gltf`
 */
import {useFrame} from '@react-three/fiber'
import * as THREE from 'three'

const BASE_LEFT_LEG_X_POSITION = -1.5
const BASE_RIGHT_LEG_X_POSITION = 1.5
const BASE_LEFT_LEG_POSITION = new THREE.Vector3(BASE_LEFT_LEG_X_POSITION, 0, 0)
const BASE_RIGHT_LEG_POSITION = new THREE.Vector3(
  BASE_RIGHT_LEG_X_POSITION,
  0,
  0,
)

export const useTableModelSize = ({
  plateMesh,
  leftLegMesh,
  rightLegMesh,
  modelSize,
}: {
  plateMesh: THREE.Mesh | null
  leftLegMesh: THREE.Mesh | null
  rightLegMesh: THREE.Mesh | null
  modelSize: number
}) => {
  let t = 0
  let plateFinalScale = new THREE.Vector3(modelSize, 1, 1)
  let leftLegFinalPosition = BASE_LEFT_LEG_POSITION.clone()
  let rightLegFinalPosition = BASE_RIGHT_LEG_POSITION.clone()
  leftLegFinalPosition.x = BASE_LEFT_LEG_X_POSITION * modelSize
  rightLegFinalPosition.x = BASE_RIGHT_LEG_X_POSITION * modelSize

  useFrame((_, delta) => {
    if (!leftLegMesh || !rightLegMesh || !plateMesh) return

    t += delta * 0.15
    t = Math.min(t, 1)

    plateMesh.scale.lerp(plateFinalScale, t)
    leftLegMesh.position.lerp(leftLegFinalPosition, t)
    rightLegMesh.position.lerp(rightLegFinalPosition, t)
  })

  return {
    baseLeftLegPosition: BASE_LEFT_LEG_POSITION,
    baseRightLegPosition: BASE_RIGHT_LEG_POSITION,
  }
}
